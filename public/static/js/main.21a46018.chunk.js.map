{"version":3,"sources":["components/HomePage.js","components/NotFound.js","api.js","components/TopArtists.js","components/UserRelatedConcerts.js","components/TopFrenchPage.js","components/AttendingEvent.js","components/connected.js","components/GenericNextConcerts.js","components/GenericHomepage.js","components/ConcertInfo.js","components/SpotiPlayer.js","components/user-dashboard.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","href","NavLink","to","Component","NotFound","backendApi","axios","create","baseURL","process","withCredentials","errorHandler","err","response","data","console","log","alert","TopArtists","topArtists","_this2","get","catch","then","setState","map","oneArtist","key","resultsPage","results","event","performance","displayName","oneEvent","type","Link","concert","concat","id","venue","UserRelatedConcerts","artistConcerts","start","date","slice","TopFrenchPage","topFrenchArtists","AttendingEvent","currentUser","Connected","topArtistName","concertArray","_this$props","match","history","params","loginToken","post","replace","loggedIn","_this3","_this4","src","image","alt","fullName","src_components_TopArtists","components_AttendingEvent","src_components_UserRelatedConcerts","src_components_TopFrenchPage","onClick","logoutClick","NextConcertsParis","concertsParis","oneConcert","GenericInfosHome","franceTopArtists","artist","el","values","mbid","oneImg","name","listeners","components_GenericNextConcerts","ConcertInfo","location","artistName","isSubmitSuccessful","concertId","preventDefault","addConcertToUser","Redirect","street","zip","country","city","handleSubmit","SpotiPlayer","relatedArtists","artists","spotArray","array","randomNumber","Math","floor","random","secondNumber","sliceToArray","artistUrl","width","height","frameBorder","allowtransparency","allow","Dashboard","delete","onConcertDelete","components_SpotiPlayer","App","userData","localStorage","getItem","JSON","parse","userInfo","setItem","stringify","removeItem","Switch","Route","exact","path","component","render","components_connected","user","updateUser","src_components_ConcertInfo","user_dashboard","role","aria-label","Boolean","window","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21a46018.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./HomePage.css\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <section className=\"HomePage\">\n        <div>\n          <h1>Live Me Up.</h1>\n          <h2>Enjoy the full experience with Spotify</h2>\n          <span>\\\\\\\\\\\\\\\\\\\\\\\\\\\\</span>\n          <p>\n            To enjoy the full experience, we recommand you to sync your acount\n            with spotify. You also can sync your spotify account to facebook to\n            live the social experience and see who is up for a live!\n          </p>\n          <div>\n            <a href=\"https://live-me.herokuapp.com/auth/spotify\">\n              Connect with Spotify\n            </a>\n            <a href=\"#0\">Connect with Deezer</a>\n            <a href=\"#0\">Connect with Apple Music </a>\n          </div>\n          <hr />\n          <small>Lorem ipsum nisi ut aliquip ex ea.</small>\n        </div>\n        <div>\n          <h1>Live Me Alone</h1>\n          <h2>Don't want the full experience ?</h2>\n          <span>\\\\\\\\\\\\\\\\\\\\\\\\\\\\</span>\n          <p>\n            Don't worrie, you can still enjoy the app and discover new bands and\n            lives. And if you want to sync later on, you still can come back to\n            this screen.\n          </p>\n          <NavLink className=\"big-btn\" to=\"/generic\">\n            Don't connect\n          </NavLink>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from \"react\";\n\nclass NotFound extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <section>\n        <p>Failed to connect</p>\n      </section>\n    );\n  }\n}\n\nexport default NotFound;\n","import axios from \"axios\";\n\nconst backendApi = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: true\n});\n\nfunction errorHandler(err) {\n  if (err.response && err.response.data) {\n    console.log(\"API ERROR\", err.response.data);\n  } else {\n    console.log(\"React Code Error\", err);\n  }\n  alert(\"ERROR ! SOMETHING WENT WRONG !\");\n  throw err;\n}\n\nexport function getLogOut() {\n  return backendApi.get(\"/logout\").catch(errorHandler);\n}\n\nexport function getTopArtist() {\n  return backendApi.get(\"/userInfo\").catch(errorHandler);\n}\n\nexport function getTopFrench() {\n  return backendApi.get(\"/top-french\").catch(errorHandler);\n}\n\nexport function getTopArtistsList() {\n  return backendApi.get(\"/top-artists-list\").catch(errorHandler);\n}\n\nexport function getRelatedConcerts() {\n  return backendApi.get(\"/similar-artist\").catch(errorHandler);\n}\n\nexport function concertInfo(concertId) {\n  return backendApi.get(`/concert-info/${concertId}`).catch(errorHandler);\n}\n\nexport function addConcert(concertId) {\n  console.log(concertId);\n  return backendApi.post(`/concert-info/${concertId}`).catch(errorHandler);\n}\n\nexport function genericInfos() {\n  return backendApi.get(\"/generic\").catch(errorHandler);\n}\n\nexport function nextConcertsParis() {\n  return backendApi.get(\"/concerts-paris\").catch(errorHandler);\n}\n\nexport function spotiPlayer() {\n  return backendApi.get(\"/spotiPlayer\").catch(errorHandler);\n}\n\nexport function userDashboard() {\n  return backendApi.get(\"/dashboard-info\").catch(errorHandler);\n}\n\nexport function deleteConcert(concertId) {\n  return backendApi.delete(`/delete-concert/${concertId}`).catch(errorHandler);\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getTopArtist } from \"../api.js\";\nimport \"./TopArtists.css\";\nfunction getConcertAddress(concert) {\n  return `/concert-info/${concert.id}`;\n}\n// import axios from \"axios\";\nclass TopArtists extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topArtists: []\n    };\n  }\n  componentDidMount() {\n    // console.log(\"it works\");\n    // const { topArtists } = this.state;\n    getTopArtist()\n      // get data from our EXPRESS API\n      .then(response => {\n        this.setState({ topArtists: response.data });\n        // console.log(\"user top artists: \", topArtists);\n        // console.log(\"user top artists: \", response.data);\n      });\n  }\n  render() {\n    const { topArtists } = this.state;\n    console.log(topArtists);\n    return (\n      <section className=\"TopArtists off-grid-section desktop-cards-section\">\n        <div className=\"desktop-card-heading\">\n          <h3>Your next recommended concerts.</h3>\n\n          <p>Check out the next live from your favorite top artists list.</p>\n          <hr className=\"small-hr\" />\n        </div>\n        <div>\n          {console.log(\"hello top artist\", topArtists)}\n          {topArtists.map(oneArtist => {\n            return (\n              <div\n                key={\n                  oneArtist.resultsPage.results.event[0].performance[0]\n                    .displayName\n                }\n              >\n                <h3>\n                  #\n                  {\n                    oneArtist.resultsPage.results.event[0].performance[0]\n                      .displayName\n                  }\n                </h3>\n                <div className=\"inline-carousel desktop-caroussel\">\n                  {oneArtist.resultsPage.results.event.map(oneEvent => {\n                    return (\n                      <div key={oneEvent.displayName}>\n                        <div className=\"inline-card\">\n                          <span className=\"outline-text\">{oneEvent.type}</span>\n                          <span className=\"card-btn\">{/* <Link to />+ */}</span>\n\n                          <div className=\"card-text\">\n                            <Link to={getConcertAddress(oneEvent)}>\n                              <h4>{oneEvent.venue.displayName}</h4>\n                              <hr />\n                              <h3>{oneEvent.displayName}</h3>\n                            </Link>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        {/* <small> see more</small> */}\n      </section>\n    );\n  }\n}\nexport default TopArtists;\n","import React, { Component } from \"react\";\nimport { getRelatedConcerts } from \"../api.js\";\n\nimport \"./UserRelatedConcerts.css\";\nimport { Link } from \"react-router-dom\";\nfunction getConcertAddress(concert) {\n  return `/concert-info/${concert.id}`;\n}\n\nclass UserRelatedConcerts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artistConcerts: []\n    };\n  }\n\n  componentDidMount() {\n    getRelatedConcerts()\n      // get data from our EXPRESS API\n      .then(response => {\n        console.log(\"yoloooooooooooooooooooo\", response.data);\n        this.setState({\n          artistConcerts: response.data\n        });\n      });\n  }\n\n  render() {\n    const { artistConcerts } = this.state;\n\n    return (\n      <section className=\"\">\n        <h3>You may also like.</h3>\n\n        <p>Discover some concerts we think you might enjoy</p>\n        <hr className=\"small-hr\" />\n\n        <div>\n          {artistConcerts.map(oneArtist => {\n            return (\n              <div className=\"inline-carousel\">\n                <div className=\"inline-carousel\">\n                  {oneArtist.resultsPage.results.event.map(oneEvent => {\n                    // console.log(\"hello aaaaaaaaaaaaaaaaa\", oneEvent);\n                    return (\n                      <div className=\"inline-thin-card\">\n                        <div className=\"card-thin-img\">\n                          <p className=\"date-day\">\n                            {oneEvent.start.date.slice(5, 7)}\n                          </p>\n                          <p className=\"date-month\">\n                            {oneEvent.start.date.slice(8)}\n                          </p>\n\n                          <p className=\"date-year\">\n                            {oneEvent.start.date.slice(0, 4)}\n                          </p>\n                        </div>\n\n                        <div className=\"text-thin-card\">\n                          <h4>{oneEvent.venue.displayName}</h4>\n                          {/* <hr className=\"\" /> */}\n                          <Link to={getConcertAddress(oneEvent)}>\n                            <h3>{oneEvent.performance[0].displayName}</h3>\n                          </Link>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n                {/* <p>{oneArtist.popularity}</p>\n                <img src={oneArtist.images[1].url} alt=\"img\" /> */}\n              </div>\n            );\n          })}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default UserRelatedConcerts;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./TopFrenchPage.css\";\nimport { getTopFrench } from \"../api.js\";\n\nfunction getConcertAddress(concert) {\n  return `/concert-info/${concert.id}`;\n}\n\nclass TopFrenchPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topFrenchArtists: []\n    };\n  }\n\n  componentDidMount() {\n    getTopFrench()\n      // get data from our EXPRESS API\n      .then(response => {\n        console.log(\"French top artists: \", response.data);\n        this.setState({\n          topFrenchArtists: response.data\n        });\n      });\n  }\n  render() {\n    const { topFrenchArtists } = this.state;\n    return (\n      <section className=\"desktop-cards-section\">\n        <div className=\"desktop-card-heading flex-item1\">\n          <h3>Trending lives around you.</h3>\n\n          <p>Discover which bands are trenging right now around you.</p>\n          <hr className=\"small-hr\" />\n        </div>\n        <div className=\"flex-item2\">\n          {topFrenchArtists.map(oneArtist => {\n            return (\n              <div>\n                <hr />\n                <h3>\n                  {\n                    oneArtist.resultsPage.results.event[0].performance[0]\n                      .displayName\n                  }\n                </h3>\n                <div className=\"inline-carousel desktop-caroussel\">\n                  {oneArtist.resultsPage.results.event.map(oneEvent => {\n                    return (\n                      <div key={oneEvent.displayName}>\n                        <div className=\"inline-card\">\n                          <span className=\"outline-text\">{oneEvent.type}</span>\n                          <span className=\"card-btn\">{/* <Link to />+ */}</span>\n\n                          <div className=\"card-text\">\n                            <Link to={getConcertAddress(oneEvent)}>\n                              <h4>{oneEvent.venue.displayName}</h4>\n                              <hr />\n                              <h3>{oneEvent.displayName}</h3>\n                            </Link>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default TopFrenchPage;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nfunction getConcertAddress(concert) {\n  return `/concert-info/${concert.id}`;\n}\nclass AttendingEvent extends Component {\n  render() {\n    const { currentUser } = this.props;\n    console.log(currentUser);\n    return (\n      <section className=\"AttendingEvent\">\n        <div className=\"AttendingEvent-text\">\n          <h3>Your Attending Concert</h3>\n\n          <p>Here are your next live events planned.</p>\n          <hr className=\"small-hr\" />\n          <div className=\"flex-small-cards\">\n            {currentUser.concert.map(oneEvent => {\n              return (\n                <div className=\"small-card\">\n                  <div className=\"small-card-text\">\n                    <div className=\"small-card-date\">\n                      <p>\n                        {oneEvent.start.date.slice(5, 7)}/\n                        {oneEvent.start.date.slice(8)}{\" \"}\n                      </p>\n                      <p>{oneEvent.venue.displayName}</p>\n                    </div>\n                    <div>\n                      {/* <hr className=\"\" /> */}\n                      <Link to={getConcertAddress(oneEvent)}>\n                        <h3>{oneEvent.performance[0].displayName}</h3>\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default AttendingEvent;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport TopArtistsLive from \"./TopArtists\";\nimport { getLogOut } from \"../api.js\";\n\nimport \"./connected.css\";\n\nimport UserRelatedConcerts from \"./UserRelatedConcerts\";\nimport TopFrenchPage from \"./TopFrenchPage\";\nimport AttendingEvent from \"./AttendingEvent\";\n\nclass Connected extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topArtists: [],\n      topArtistName: [],\n      concertArray: [],\n      currentUser: { concert: [] }\n    };\n  }\n\n  componentDidMount() {\n    const { match, history } = this.props;\n\n    if (match.params.loginToken) {\n      axios\n        .post(\"https://live-me.herokuapp.com/auth/token-login\", match.params)\n        .then(response => {\n          console.log(\"Logged-In\", response.data);\n          history.replace(\"/connected\");\n          this.props.loggedIn(response.data);\n        })\n        .catch(err => alert(\"poop\"));\n    }\n  }\n\n  logoutClick() {\n    getLogOut().then(response => {\n      console.log(\"LOGGED OUT\");\n      console.log(this.state.currentUser);\n\n      this.props.loggedIn(null);\n    });\n  }\n\n  render() {\n    const { currentUser } = this.props;\n    // const { topArtist } = this.state;\n    console.log(\"loooooooooool :\", currentUser);\n\n    if (!this.props.currentUser) {\n      return <p>Loading...</p>;\n    }\n    return (\n      <section className=\"Connected\">\n        <header className=\"Header\">\n          <div className=\"header-card\">\n            <div className=\"header-text\">\n              <div className=\"img-flex\">\n                <img\n                  className=\"profilPic\"\n                  src={this.props.currentUser.image}\n                  alt=\"\"\n                />\n              </div>\n\n              <h1>Hi {this.props.currentUser.fullName}</h1>\n              <hr />\n              <h2>Kean for new concerts?</h2>\n              <p>\n                Check out the next live bands arround, any trending concerts\n                arround any more.\n              </p>\n              <small>profile -></small>\n            </div>\n          </div>\n        </header>\n\n        <TopArtistsLive {...this.props} />\n        <AttendingEvent {...this.props} />\n        <UserRelatedConcerts {...this.props} />\n        <TopFrenchPage {...this.props} />\n        <NavLink to=\"/\">\n          <button onClick={() => this.logoutClick()}>Log Out</button>\n        </NavLink>\n      </section>\n    );\n  }\n}\n\nexport default Connected;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./GenericNextConcerts.css\";\nimport { nextConcertsParis } from \"../api\";\n\nfunction getConcertAddress(concert) {\n  return `/concert-info/${concert.id}`;\n}\n\nclass NextConcertsParis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      concertsParis: []\n    };\n  }\n\n  componentDidMount() {\n    nextConcertsParis()\n      // get data from our EXPRESS API\n      .then(response => {\n        // console.log(response.data);\n        this.setState({\n          concertsParis: response.data.resultsPage.results.event\n        });\n      });\n  }\n\n  render() {\n    const { concertsParis } = this.state;\n    // console.log(concertsParis);\n    return (\n      <section className=\"NextConcertsParis\">\n        <h1>Next Concerts in Paris</h1>\n\n        <span>\\\\\\\\\\\\\\\\\\\\\\\\\\\\</span>\n        <p>See the upcomming event in Paris</p>\n        <div className=\"column-card-flex\">\n          {concertsParis.map(oneConcert => {\n            return (\n              <div className=\"column-card\">\n                <Link to={getConcertAddress(oneConcert)}>\n                  <h3>{oneConcert.displayName}</h3>\n                  <hr className=\"small-hr\" />\n                </Link>\n                <p>{oneConcert.type}</p>\n                <p>{oneConcert.venue.displayName}</p>\n              </div>\n            );\n          })}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default NextConcertsParis;\n","import React, { Component } from \"react\";\nimport { genericInfos } from \"../api.js\";\nimport NextConcertsParis from \"./GenericNextConcerts\";\n\nimport \"./GenericHomepage.css\";\n\nclass GenericInfosHome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      franceTopArtists: []\n    };\n  }\n\n  componentDidMount() {\n    genericInfos()\n      // get data from our EXPRESS API\n      .then(response => {\n        // console.log(response.data);\n        this.setState({\n          franceTopArtists: response.data.artist\n        });\n      });\n  }\n\n  oneImg(el) {\n    // console.log(el);\n\n    return Object.values(el);\n  }\n\n  render() {\n    const { franceTopArtists } = this.state;\n    console.log(\"aaaaaaaaaaaaaaa----------\", franceTopArtists);\n    // console.log(franceTopArtists);\n    return (\n      <section className=\"GenericInfosHome\">\n        <header>\n          <div>\n            <span className=\"outline-text\">GENERIC</span>\n            <h1>\n              Hello.\n              <br /> You are not connected?\n            </h1>\n            <h2>Don't panic, we got your back!</h2>\n            <p>\n              You are currently on the unsynchronised page. You will discover\n              artits and lives that are famous around you :)\n            </p>\n          </div>\n        </header>\n        <h1>Top Artists in France</h1>\n        <span>\\\\\\\\\\\\\\\\\\\\\\\\\\\\</span>\n        <p>Discover what french people like to listen right now</p>\n        {franceTopArtists.map(oneArtist => {\n          return (\n            <div className=\"column-card-with-image\" key={oneArtist.mbid}>\n              <img src={this.oneImg(oneArtist.image[4])} alt=\"artist picto\" />\n              <div className=\"column-card-with-image-text\">\n                <h3>{oneArtist.name}</h3>\n\n                <p>{oneArtist.listeners} Listeners</p>\n              </div>\n            </div>\n          );\n        })}\n        <NextConcertsParis />\n      </section>\n    );\n  }\n}\n\nexport default GenericInfosHome;\n","import React, { Component } from \"react\";\nimport { concertInfo } from \"../api.js\";\nimport { addConcert } from \"../api.js\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./ConcertInfo.css\";\n\nclass ConcertInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      concert: {\n        location: {},\n        performance: [0],\n        venue: {},\n        artistName: \"\",\n        isSubmitSuccessful: false\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    const { params } = this.props.match;\n    concertInfo(params.concertId).then(response => {\n      this.setState({\n        concert: response.data.results.event,\n        artistName: response.data.results.event.performance[0].displayName\n      });\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { params } = this.props.match;\n    addConcert(params.concertId).then(response => {\n      this.props.addConcertToUser(response.data);\n      this.setState({ isSubmitSuccessful: true });\n    });\n  }\n\n  render() {\n    const { concert } = this.state;\n    return this.state.isSubmitSuccessful ? (\n      <Redirect to=\"/connected\" />\n    ) : (\n      <section className=\"ConcertInfo\">\n        <header className=\"Header\" />\n\n        <div className=\"concert-card\">\n          <h4>{concert.venue.displayName}</h4>\n          <hr />\n          <h3>{concert.displayName}</h3>\n          <p>\n            {concert.venue.street}, {concert.venue.zip}\n          </p>\n          <p>\n            {concert.location.country}\n            {concert.location.city}.\n          </p>\n          <button onClick={event => this.handleSubmit(event)}>\n            <h3>ATTENDING</h3>\n          </button>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ConcertInfo;\n","import React, { Component } from \"react\";\nimport { spotiPlayer } from \"../api.js\";\n\nfunction sliceToArray(array) {\n  const randomNumber = Math.floor(Math.random() * 16) + 1;\n  const secondNumber = randomNumber + 3;\n  return array.slice(randomNumber, secondNumber);\n}\n\nclass SpotiPlayer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      relatedArtists: []\n    };\n  }\n\n  componentDidMount() {\n    spotiPlayer().then(response => {\n      this.setState({ relatedArtists: response.data.artists });\n    });\n  }\n\n  render() {\n    const { relatedArtists } = this.state;\n    const spotArray = sliceToArray(relatedArtists);\n    return (\n      <section>\n        <h2>SPOTIFY PLAYER</h2>\n        <ul>\n          {spotArray.map(oneArtist => {\n            const artistUrl = `https://open.spotify.com/embed/artist/${\n              oneArtist.id\n            }`;\n            return (\n              <div key={oneArtist.id}>\n                <h4>{oneArtist.name}</h4>\n                <iframe\n                  src={artistUrl}\n                  width=\"300\"\n                  height=\"80\"\n                  frameBorder=\"10\"\n                  allowtransparency=\"true\"\n                  allow=\"encrypted-media\"\n                />\n              </div>\n            );\n          })}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default SpotiPlayer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteConcert } from \"../api.js\";\nimport SpotiPlayer from \"./SpotiPlayer.js\";\nfunction getConcertAddress(concert) {\n  return `/concert-info/${concert.id}`;\n}\n\nclass Dashboard extends Component {\n  handleSubmit(concert) {\n    deleteConcert(concert.id).then(response => {\n      this.props.onConcertDelete(response.data);\n    });\n  }\n\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <section>\n        <img src={currentUser.image} />\n        <h2>Hello, {currentUser.fullName}</h2>\n        <p>\n          We display for you some of the informations regarding your account\n        </p>\n        <ul>\n          <p>Here are some of the concert you are attending:</p>\n          {currentUser.concert.map(oneEvent => {\n            return (\n              <li key={oneEvent.id}>\n                <Link to={getConcertAddress(oneEvent)}>\n                  <h3>{oneEvent.displayName}</h3>\n                </Link>\n                <button onClick={() => this.handleSubmit(oneEvent)}>\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n        <h2>Discover some Artists with us:</h2>\n        <SpotiPlayer {...this.props} />\n      </section>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Switch, Route, NavLink } from \"react-router-dom\";\nimport \"./App.css\";\nimport HomePage from \"./components/HomePage.js\";\nimport NotFound from \"./components/NotFound.js\";\nimport Connected from \"./components/connected\";\nimport TopFrenchPage from \"./components/TopFrenchPage\";\nimport UserRelatedConcerts from \"./components/UserRelatedConcerts\";\nimport GenericInfosHome from \"./components/GenericHomepage\";\nimport ConcertInfo from \"./components/ConcertInfo.js\";\nimport Dashboard from \"./components/user-dashboard\";\nimport SpotiPlayer from \"./components/SpotiPlayer.js\";\nimport AttendingEvent from \"./components/AttendingEvent\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let userData = localStorage.getItem(\"currentUser\");\n    if (userData) {\n      userData = JSON.parse(userData);\n    }\n\n    this.state = {\n      currentUser: userData\n    };\n  }\n\n  updateUser(userInfo) {\n    if (userInfo) {\n      localStorage.setItem(\"currentUser\", JSON.stringify(userInfo));\n    } else {\n      localStorage.removeItem(\"currentUser\");\n    }\n    this.setState({ currentUser: userInfo });\n  }\n\n  render() {\n    const { currentUser } = this.state;\n    return (\n      <section className=\"App\">\n        <div className=\"body\">\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route\n              path=\"/connected/:loginToken?\"\n              render={props => {\n                return (\n                  <Connected\n                    currentUser={this.state.currentUser}\n                    loggedIn={user => this.updateUser(user)}\n                    match={props.match}\n                    history={props.history}\n                  />\n                );\n              }}\n            />\n            <Route path=\"/top-french\" component={TopFrenchPage} />\n            <Route path=\"/similar-artist\" component={UserRelatedConcerts} />\n            <Route\n              path=\"/concert-info/:concertId\"\n              render={props => (\n                <ConcertInfo\n                  match={props.match}\n                  currentUser={this.state.currentUser}\n                  addConcertToUser={user => this.updateUser(user)}\n                />\n              )}\n            />\n            <Route path=\"/spotiPlayer\" component={SpotiPlayer} />\n            <Route path=\"/generic\" component={GenericInfosHome} />\n            <Route\n              path=\"/attending-event\"\n              render={() => (\n                <AttendingEvent currentUser={this.state.currentUser} />\n              )}\n            />\n            <Route\n              path=\"/user-dashboard\"\n              render={() => (\n                <Dashboard\n                  currentUser={this.state.currentUser}\n                  onConcertDelete={user => this.updateUser(user)}\n                />\n              )}\n            />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n        <footer>\n          <NavLink to=\"/connected\">Home Page</NavLink>\n          <NavLink to=\"/top-french\">\n            <button>Go to French Selection</button>\n          </NavLink>\n          <NavLink to=\"/similar-artist\">\n            <button>Our selection of similar concerts for you</button>\n          </NavLink>\n          <NavLink to=\"/user-dashboard\">Your Dashboard</NavLink>\n          <p>\n            Made with{\" \"}\n            <span role=\"img\" aria-label=\"guitar\">\n              🎸\n            </span>{\" \"}\n            at Ironhack Paris\n          </p>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}